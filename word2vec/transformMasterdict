import 

#1. Transform the sbmat masterdict into a CSV file so I can use whatever code language to use
#2. Download the google code the format is [ word [vector]] and find the SBMAT dictionary entries, inside the Google data. 
#3. If the data inside the SBMAT is not inside the google data then I let the corresponding row equal to all zeros. [0 0 0 0.. 0 0]
#4.

import utils._   // utility methods
import java.io.File
import java.nio.file.{Paths, Files}

import BIDMat.{CMat, CSMat, DMat, Dict, FMat, FND, GMat, GDMat, GIMat, GLMat, GSMat, GSDMat, HMat, IDict, Image, IMat, LMat, Mat, SMat, SBMat, SDMat}
import BIDMat.MatFunctions._
import BIDMat.SciFunctions._


var dictdir = "/var/local/destress/tokenized/";
var trainingdir = "/var/local/destress/";
val masterDict = loadDict(dictdir+"masterDict.sbmat",dictdir+"masterDict.dmat");
val trained_data = loadFMat(trainingdir + "GoogleNews-vector-negative300.bin.gz"); 

for ( entry in masterDict) { //go thru each entry in the masterDict and check if it is in trained_data

}
i


